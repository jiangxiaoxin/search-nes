{"version":3,"sources":["components/search/Search.jsx","utils/index.js","components/load.more/LoadMore.jsx","components/table/Table.jsx","utils/db.js","App.jsx","serviceWorker.js","index.js"],"names":["Search","this","props","value","onSearch","_react_16_6_0_react_default","a","createElement","className","type","onChange","onClick","React","Component","format","toString","Table","Table_TableHeader","Table_TableList","data","TableHeader","TableList","listItems","map","hit","index","Table_TableListItem","key","objectID","TableListItem","_this$props$data","title","author","num_comments","points","url","created_at","createAt","timestamp","date","Date","y","getFullYear","m","getMonth","d","getDate","hh","getHours","mm","getMinutes","ss","getSeconds","b","join","parseTime","href","target","rel","LoadMoreBtn","Loading","LoadMore","isSearching","rest","Object","objectWithoutProperties","Fragment","LoadMore_Loading","DB","classCallCheck","result","searchKey","page","hits","concat","hitsOfSearchKey","defineProperty","DEFAULT_QUERY","App","_this","possibleConstructorReturn","getPrototypeOf","call","db","state","searchItem","error","undefined","bindFunctions","Search_Search","handleSearchInputChange","handleSearchBtnClick","Table_Table","load_more_LoadMore","handleLoadMore","bind","updateHitsList","console","log","getHits","length","currentHits","setState","fetchHits","Error","_this2","_this3","arguments","alert","axios","then","res","setHits","catch","e","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yWAMqBA,2MAIjBC,KAAKC,MAAMC,OAASF,KAAKC,MAAME,4CAK/B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,SAAWT,KAAKC,MAAMQ,SAAWP,MAAQF,KAAKC,MAAMC,MAAQK,UAAU,iBACzFH,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASE,QAASV,KAAKC,MAAME,SAAWI,UAAU,cAA/D,kBAZ4BI,IAAMC,YCQ1C,SAASC,EAAOX,GACd,OAAOA,EAAQ,GAAM,IAAMA,EAASA,EAAMY,qBCWvBF,ECpBAG,mLAEjB,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAACW,EAAD,CAAWC,KAAOlB,KAAKC,MAAMiB,eALFP,IAAMC,WAYnCO,mLAEF,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,iCAVkBK,IAAMC,WAgB1BQ,mLAGF,IAAIC,EAAYrB,KAAKC,MAAMiB,KAAKI,IAAI,SAACC,EAAKC,GACxC,OACEpB,EAAAC,EAAAC,cAACmB,EAAD,CAAeC,IAAMH,EAAII,SAAWT,KAAOK,EAAMC,MAAQA,MAG7D,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXc,UAVcV,IAAMC,WAgBxBgB,mLACK,IAAAC,EACoE7B,KAAKC,MAAMiB,KAA9EY,EADDD,EACCC,MAAOC,EADRF,EACQE,OAAQC,EADhBH,EACgBG,aAAcC,EAD9BJ,EAC8BI,OAAQC,EADtCL,EACsCK,IAAKC,EAD3CN,EAC2CM,WAAYR,EADvDE,EACuDF,SAC1DS,EFrDD,SAAmBC,GACxB,IAAIC,EAAO,IAAIC,KAAKF,GAChBG,EAAIF,EAAKG,cACTC,EAAIJ,EAAKK,WAAa,EACtBC,EAAIN,EAAKO,UACTC,EAAKR,EAAKS,WACVC,EAAKV,EAAKW,aACVC,EAAKZ,EAAKa,aAEV9C,EAAI,CAACmC,EAAGE,EAAGE,GAAGtB,IAAIT,GAClBuC,EAAI,CAACN,EAAIE,EAAIE,GAAI5B,IAAIT,GACzB,OAAOR,EAAEgD,KAAK,KAAO,IAAMD,EAAEC,KAAK,KE0CjBC,CAAUnB,GACzB,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,YAAQN,KAAKC,MAAMuB,MAAQ,GAC3BpB,EAAAC,EAAAC,cAAA,YAAQqB,GACRvB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGiD,KAAOrB,EAAMsB,OAAO,SAASjD,UAAU,aAAakD,IAAI,uBAAwB3B,IAErF1B,EAAAC,EAAAC,cAAA,YAAQyB,GACR3B,EAAAC,EAAAC,cAAA,YAAQ0B,GACR5B,EAAAC,EAAAC,cAAA,YAAQ2B,GACR7B,EAAAC,EAAAC,cAAA,YAAQ8B,WAdYzB,IAAMC,mBD9C5B8C,0LAGF,OACEtD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmBG,QAAUV,KAAKC,MAAMS,SAA1D,gBALkBC,IAAMC,YAgB1B+C,EAAU,SAAC1D,GACf,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,eAeWqD,GAXMhD,EASQ8C,EATO,SAACzD,GAAU,IACrC4D,EAAyB5D,EAAzB4D,YAAgBC,EADqBC,OAAAC,EAAA,EAAAD,CACZ9D,EADY,iBAE7C,OACEG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4D,SAAA,KACIJ,EAAczD,EAAAC,EAAAC,cAAC4D,EAAD,MAAc9D,EAAAC,EAAAC,cAACM,EAAekD,cE9B/BK,aACnB,SAAAA,IAAeJ,OAAAK,EAAA,EAAAL,CAAA/D,KAAAmE,GACbnE,KAAKqE,OAAS,uDAQRC,EAAWC,GACjB,IAAIC,EAAOxE,KAAKqE,OAAOC,GACvB,OAAKE,IAGLA,EAAOA,EAAI,GAAAC,OAAIH,EAAJ,KAAAG,OAAiBF,MAFnB,qCAeHD,EAAWC,EAAMC,GACvB,IAAI9C,EAAG,GAAA+C,OAAMH,EAAN,KAAAG,OAAmBF,GACtBG,EAAkB1E,KAAKqE,OAAOC,GAC7BI,EAQLA,EAAgBhD,GAAO8C,EAPrBxE,KAAKqE,OAAOC,GAAZP,OAAAY,EAAA,EAAAZ,CAAA,GACGrC,EAAM8C,YCpBTI,EAAgB,QAmKPC,cAvJb,SAAAA,EAAY5E,GAAO,IAAA6E,EAAA,OAAAf,OAAAK,EAAA,EAAAL,CAAA/D,KAAA6E,IACjBC,EAAAf,OAAAgB,EAAA,EAAAhB,CAAA/D,KAAA+D,OAAAiB,EAAA,EAAAjB,CAAAc,GAAAI,KAAAjF,KAAMC,KACDiF,GAAK,IAAIf,EACdW,EAAKK,MAAQ,CACXC,WAAY,GACZd,UAAWM,EACXf,aAAa,EACbwB,WAAOC,EACPf,KAAM,EACNC,KAAM,IAGRM,EAAKS,gBAZYT,wEAiBjB,OACE1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACkF,EAAD,CAAQ/E,SAAWT,KAAKyF,wBAA0BtF,SAAWH,KAAK0F,qBAAuBxF,MAAQF,KAAKmF,MAAMb,YAC5GlE,EAAAC,EAAAC,cAACqF,EAAD,CAAOzE,KAAOlB,KAAKmF,MAAMX,OACzBpE,EAAAC,EAAAC,cAACsF,EAAD,CAAU/B,YAAc7D,KAAKmF,MAAMtB,YAAcnD,QAAUV,KAAK6F,0DAMpE7F,KAAK0F,qBAAuB1F,KAAK0F,qBAAqBI,KAAK9F,MAC3DA,KAAKyF,wBAA0BzF,KAAKyF,wBAAwBK,KAAK9F,MACjEA,KAAK6F,eAAiB7F,KAAK6F,eAAeC,KAAK9F,MAC/CA,KAAK+F,eAAiB/F,KAAK+F,eAAeD,KAAK9F,+CAK/C,GADAgG,QAAQC,IAAR,kBAAAxB,OAA8BzE,KAAKmF,MAAMb,UAAzC,MAAAG,OAAuDzE,KAAKmF,MAAMC,WAAlE,MAAAX,OAAiFzE,KAAKmF,MAAMZ,OACvFvE,KAAKmF,MAAMC,WAAhB,CAMA,IAAIb,EAAOvE,KAAKmF,MAAMZ,KAAO,EACzBC,EAAOxE,KAAKkF,GAAGgB,QAAQlG,KAAKmF,MAAMC,WAAYb,GAClD,GAAIC,GAAQA,EAAK2B,OAAS,EAAG,CAC3BH,QAAQC,IAAI,wFACZ,IAAIG,EAAcpG,KAAKmF,MAAMX,KAC7B4B,EAAcA,EAAY3B,OAAOD,GACjCxE,KAAKqG,SAAS,CACZ7B,KAAM4B,EACN7B,cAGFvE,KAAKsG,UAAUtG,KAAKmF,MAAMC,WAAYpF,KAAKmF,MAAMZ,KAAO,QAhBxDvE,KAAKqG,SAAS,CACZhB,MAAO,IAAIkB,MAAM,oEAsBA,IAAAC,EAAAxG,KACjBsE,EAAYtE,KAAKmF,MAAMb,UAC3B0B,QAAQC,IAAI,wBAAU3B,GACtB0B,QAAQC,IAAI,gDAAcjG,KAAKmF,MAAMC,YACrC,IAAIZ,EAAOxE,KAAKkF,GAAGgB,QAAQ5B,EAAW,GACtC,GAAIE,GAAQA,EAAK2B,OAAS,EAGxB,OAFAH,QAAQC,IAAI,2EACZjG,KAAK+F,eAAezB,EAAW,EAAGE,GAKpCxE,KAAKqG,SAAS,CACZ9B,KAAM,EACNa,WAAYd,EACZE,KAAM,IACL,WACDgC,EAAKF,UAAUhC,EAAW,uCASpBA,GAAqB,IAAAmC,EAAAzG,KAAVuE,EAAUmC,UAAAP,OAAA,QAAAb,IAAAoB,UAAA,GAAAA,UAAA,GAAH,EAE1B,GAAI1G,KAAKmF,MAAMtB,YACb8C,MAAM,8BADR,CAIA3G,KAAKqG,SAAS,CACZxC,aAAa,IAEf,IAAI3B,EAAG,GAAAuC,OAvGO,iCAuGPA,OAtGS,UAsGT,KAAAA,OArGU,UAqGVA,OAAgDH,EAAhD,KAAAG,OApGQ,SAoGRA,OAA0EF,EAA1E,KAAAE,OAnGO,gBAmGPA,OAzGS,OA0GhBmC,IAAM1E,GAAK2E,KAAK,SAAAC,GACd,IAAI5F,EAAO4F,EAAI5F,KACPsD,EAAetD,EAAfsD,KAAMD,EAASrD,EAATqD,KACd,KAAIC,GAAQA,EAAK2B,OAAS,GAKxB,MADY,IAAII,MAAM,+BAAiCE,EAAKtB,MAAMb,WAHlEmC,EAAKV,eAAezB,EAAWC,EAAMC,GACrCiC,EAAKvB,GAAG6B,QAAQzC,EAAWC,EAAMC,KAKlCwC,MAAM,SAAA3B,GACPoB,EAAKJ,SAAS,CACZhB,QACAxB,aAAa,8CAWJS,EAAWC,EAAMC,GAE9B,GADAwB,QAAQC,IAAR,kBAAAxB,OAA8BH,EAA9B,KAAAG,OAA2CzE,KAAKmF,MAAMC,WAAtD,KAAAX,OAAoEF,IACjED,IAActE,KAAKmF,MAAMC,WAAY,CACtC,IAAIgB,EAAcpG,KAAKmF,MAAMX,KAC7B4B,EAAcA,EAAY3B,OAAOD,GACjCxE,KAAKqG,SAAS,CACZ7B,KAAM4B,EACN7B,OACAV,aAAa,SAGf7D,KAAKqG,SAAS,CACZ7B,OACAD,OACAV,aAAa,EACbuB,WAAYd,oDASM2C,GACtB,IAAI/G,EAAQ+G,EAAEzD,OAAOtD,MACrBF,KAAKqG,SAAS,CACZ/B,UAAWpE,WApJCU,aCXEsG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOpH,EAAAC,EAAAC,cAACmH,EAAD,MAASC,SAASC,eAAe,SDsH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjB,KAAK,SAAAkB,GACjCA,EAAaC","file":"static/js/main.690dc523.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport './Search.css';\n\nexport default class Search extends React.Component {\n\n  // 如果有默认值，初始第一次就去查询一次\n  componentDidMount() {\n    this.props.value && this.props.onSearch();\n  }\n\n\n  render() {\n    return (\n      <div className=\"search-wrapper\">\n        <input type=\"text\" onChange={ this.props.onChange } value={ this.props.value } className=\"search-input\"/>\n        <button type=\"button\" onClick={this.props.onSearch } className=\"search-btn\">search</button>\n      </div>\n    )\n  }\n}\n\n\nSearch.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  onSearch: PropTypes.func.isRequired\n}","export function parseTime(timestamp) {\n  let date = new Date(timestamp)\n  let y = date.getFullYear();\n  let m = date.getMonth() + 1;\n  let d = date.getDate();\n  let hh = date.getHours();\n  let mm = date.getMinutes();\n  let ss = date.getSeconds();\n  \n  let a = [y, m, d].map(format);\n  let b = [hh, mm, ss].map(format);\n  return a.join('-') + ' ' + b.join(':')\n}\n\nfunction format(value) {\n  return value < 10 ? ('0' + value) : value.toString();\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport './LoadMore.css';\n\nclass LoadMoreBtn extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <button className=\"load-more-button\" onClick={ this.props.onClick }>More</button>\n      </div>\n    )\n  }\n}\n\nLoadMoreBtn.propTypes = {\n  onClick: PropTypes.func.isRequired\n}\n\n\nconst Loading = (props) => {\n  return (\n    <div className=\"loading\">loading...</div>\n  )\n}\n\nconst WithLoading = (Component) =>  (props) => {\n  const { isSearching, ...rest } = props\n  return (\n    <>\n      { isSearching ? <Loading /> : <Component { ...rest }/>}\n    </>\n  )\n}\n\nconst LoadMore = WithLoading(LoadMoreBtn)\n\nexport default LoadMore","import React from 'react';\n\nimport { parseTime } from '../../utils/index.js';\n\nimport './Table.css';\n\nexport default class Table extends React.Component {\n  render() {\n    return (\n      <div className=\"table-wrapper\">\n        <TableHeader />\n        <TableList data={ this.props.data }/>\n      </div>\n    )\n  }\n}\n\n\nclass TableHeader extends React.Component {\n  render() {\n    return (\n      <div className=\"table-header\">\n        <span>INDEX</span>\n        <span>ID</span>\n        <span>TITLE</span>\n        <span>AUTHOR</span>\n        <span>COMMENTS</span>\n        <span>POINTS</span>\n        <span>CREATE_AT</span>\n      </div>\n    )\n  }\n}\n\nclass TableList extends React.Component {\n\n  render() {\n    let listItems = this.props.data.map((hit, index) => {\n      return (\n        <TableListItem key={ hit.objectID } data={ hit } index={ index }/>\n      )\n    })\n    return (\n      <div className=\"table-list\">\n        { listItems }\n      </div>\n    )\n  }\n}\n\nclass TableListItem extends React.Component {\n  render() {\n    const { title, author, num_comments, points, url, created_at, objectID } = this.props.data\n    let createAt = parseTime(created_at)\n    return (\n      <div className=\"table-list-item\">\n        <span>{ this.props.index + 1 }</span>\n        <span>{ objectID }</span>\n        <span>\n          <a href={ url } target='_blank' className=\"title-link\" rel='noreferrer noopener'>{ title }</a>\n        </span>\n        <span>{ author }</span>\n        <span>{ num_comments }</span>\n        <span>{ points }</span>\n        <span>{ createAt }</span>\n      </div>\n    )\n  }\n}\n\n\n\n\n","export default class DB {\n  constructor() {\n    this.result = {}\n  }\n\n  /**\n   * 查询本地缓存\n   * @param {*} searchKey 数据对应的查询key\n   * @param {*} page 数据对应的页码\n   */\n  getHits(searchKey, page) {\n    let hits = this.result[searchKey]\n    if (!hits) {\n      return null\n    }\n    hits = hits[`${searchKey}_${page}`]\n    if (!hits) {\n      return null\n    }\n    return hits\n  }\n\n  /**\n   * 本地缓存数据\n   * @param {*} searchKey 数据对应的查询key\n   * @param {*} page 数据对应的页码\n   * @param {*} hits 数据列表\n   */\n  setHits(searchKey, page, hits) {\n    let key = `${searchKey}_${page}`\n    let hitsOfSearchKey = this.result[searchKey]\n    if (!hitsOfSearchKey) { // 如果找不到searchKey对应的对象，直接初始化就行了\n      this.result[searchKey] = {\n        [key]: hits\n      }\n      return\n    }\n\n    // 对应的searchKey有了，但是没有对应的page的数据\n    hitsOfSearchKey[key] = hits\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios'\n\nimport './App.css';\n\nimport Search from './components/search/Search.jsx';\nimport Table from './components/table/Table.jsx';\nimport LoadMore from './components/load.more/LoadMore.jsx';\n\nimport DB from './utils/db.js';\n\n// import hits from './net/mock.js';\n\nconst DEFAULT_QUERY = 'redux';\nconst DEFAULT_HPP = '100';\n\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\nconst PARAM_HPP = 'hitsPerPage=';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.db = new DB();\n    this.state = {\n      searchItem: '',  //当前显示的数据的key\n      searchKey: DEFAULT_QUERY, //当前查询的key\n      isSearching: false,\n      error: undefined,\n      page: 0,\n      hits: [], // 当前显示的列表数据\n    };\n\n    this.bindFunctions();\n  }\n\n\n  render() {\n    return (\n      <div className=\"app-wrapper\">\n        <Search onChange={ this.handleSearchInputChange } onSearch={ this.handleSearchBtnClick } value={ this.state.searchKey}/>\n        <Table data={ this.state.hits }/>\n        <LoadMore isSearching={ this.state.isSearching } onClick={ this.handleLoadMore }/>\n      </div>\n    );\n  }\n\n  bindFunctions() {\n    this.handleSearchBtnClick = this.handleSearchBtnClick.bind(this);\n    this.handleSearchInputChange = this.handleSearchInputChange.bind(this);\n    this.handleLoadMore = this.handleLoadMore.bind(this);\n    this.updateHitsList = this.updateHitsList.bind(this);\n  }\n\n  handleLoadMore() {\n    console.log(`handleLoadMore ${this.state.searchKey}  ${this.state.searchItem}  ${this.state.page}`)\n    if (!this.state.searchItem) { //没有确切的搜索过某个key，你怎么能加载更多呢\n      this.setState({\n        error: new Error(\"can't load more\")\n      })\n      return\n    }\n    let page = this.state.page + 1\n    let hits = this.db.getHits(this.state.searchItem, page)\n    if (hits && hits.length > 0) {\n      console.log('不用加载更多了，本地已经有了')\n      let currentHits = this.state.hits\n      currentHits = currentHits.concat(hits)\n      this.setState({\n        hits: currentHits,\n        page\n      })\n    } else {\n      this.fetchHits(this.state.searchItem, this.state.page + 1)\n    }\n  }\n\n  /**\n   * 点击顶部按钮查询。点击后肯定从第0页开始重新查\n   */\n  handleSearchBtnClick() {\n    let searchKey = this.state.searchKey\n    console.log(\"要查的key\", searchKey)\n    console.log('当前显示的查询key', this.state.searchItem)\n    let hits = this.db.getHits(searchKey, 0)\n    if (hits && hits.length > 0) {  // 从缓存中找到了对应的数据\n      console.log('找到数据了，不用请求了')\n      this.updateHitsList(searchKey, 0, hits)\n      return\n    }\n\n    // 找不到对应的数据，就重新请求数据，然后建立缓存\n    this.setState({\n      page: 0,\n      searchItem: searchKey,\n      hits: []\n    }, () => {  // 更新完后去获取真的数据\n      this.fetchHits(searchKey, 0)\n    })\n  }\n\n  /**\n   * 这里将真的会去获取新数据哦\n   * @param searchKey 查询的关键词\n   * @param page 查询的页码\n   */\n  fetchHits(searchKey, page = 0) {\n    // return\n    if (this.state.isSearching) {\n      alert('searching, wait plz...');\n      return\n    }\n    this.setState({\n      isSearching: true\n    })\n    let url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchKey}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`\n    axios(url).then(res => {\n      let data = res.data;\n      const { hits, page } = data\n      if (hits && hits.length > 0) {  //能拿到数据\n        this.updateHitsList(searchKey, page, hits)\n        this.db.setHits(searchKey, page, hits)\n      } else {  //回包里并没有有效数据\n        let error = new Error(\"there is no more data about \" + this.state.searchKey)\n        throw error\n      }\n    }).catch(error => {\n      this.setState({\n        error,\n        isSearching: false\n      })\n    })\n  } \n\n  /**\n   * 获取到新数据之后，更新要显示的数据\n   * @param  searchKey 获取到的数据对应的检索词\n   * @param  page   数据的页数\n   * @param  hits   数据列表\n   */\n  updateHitsList(searchKey, page, hits) {\n    console.log(`updateHitsList ${searchKey} ${this.state.searchItem} ${page}`)\n    if(searchKey === this.state.searchItem) { // 如果一样，那就增量更新数据\n      let currentHits = this.state.hits\n      currentHits = currentHits.concat(hits)\n      this.setState({\n        hits: currentHits,\n        page,\n        isSearching: false,\n      })\n    } else {  // 如果不一样，那就替换\n      this.setState({\n        hits,\n        page,\n        isSearching: false,\n        searchItem: searchKey\n      })\n    }\n  }\n\n  /**\n   * 顶部输入框输入\n   * @param e input event\n   */\n  handleSearchInputChange(e) {\n    let value = e.target.value;\n    this.setState({\n      searchKey: value\n    });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/base.css';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// if (module) {\n//   module.hot.accept();\n// }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}